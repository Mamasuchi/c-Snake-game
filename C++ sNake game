#include<iostream>
#include<conio.h>
#include<windows.h>
#include <iomanip>
#include <cmath>
using namespace std;

bool gameOver;
const int width = 30;
const int height = 30;
int x, y, fruitX, fruitY, score;
enum eDirection { STOP = 0,LEFT, RIGHT, UP, DOWN };
eDirection dir;
int tailx[100];
int taily[100];
int htail;

void Setup() {
    gameOver = false;
    dir = STOP;
    x = width / 2;
    y = height / 2;
    fruitX = rand() % width;
    fruitY = rand() % height;
    score = 0;
}
void Draw() {
    system("cls");
    for (int i = 0; i < width; i++)
        std::cout << "*";
    std::cout << endl;

    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width+2; j++) 
        {
            if (j == 0)
                std::cout << "*";
            if (i == y && j == x)
                std::cout << "O";
            else if (i == fruitY && j == fruitX)
                std::cout << "F";
            else {
                bool print = false;
                for (int k = 0; k < htail; k++) {
                    if (tailx[k] == j && taily[k] == i)
                    {
                        cout << "o";
                        print = true;
                    }
                }
                if(!print)
                std::cout << " ";
            }
                

            if (j == width-1)
                std::cout << "*";
        }
            
        std::cout << endl;
    }

    for (int i = 0; i < height+2; i++)
        std::cout << "*";
    std::cout << endl;

    std::cout << "Score:" << score;

}
void Input() {
    if (_kbhit()) {
        switch (_getch()) {
        case 'a':
            dir = LEFT;
            break;
        case'w':
            dir = UP;
            break;
        case 'd':
            dir = RIGHT;
            break;
        case's':
            dir = DOWN;
            break;
        case'x':
            gameOver = true;
            break;

        }
   }
}
void Logic() {
    
    int head = tailx[0];
    int head2 = taily[0];
    int prevHeadx, prevheadY;
    tailx[0] = x;
    taily[0] = y;


    for (int i = 1; i < htail; i++) {
        prevHeadx = tailx[i];
        prevheadY = taily[i];
        tailx[i] = head;
        taily[i] = head2;
        head = prevHeadx;
        head2 = prevheadY;
    }
    
    switch (dir) {
    case STOP:
        break;
    case LEFT:
        x--;
        break;
    case RIGHT:
        x++;
        break;
    case UP:
        y--;
        break;
    case DOWN:
        y++;
        break;
    default:
        break;
    }
    if (x > width or x < 0 or y>height or y<0)
        gameOver = true;
    for (int i = 0; i < htail; i++)
        if (tailx[i] == x && taily[i] == y)
            gameOver = true;
       

    if (x == fruitX && y == fruitY)
    {
        score = score + 5;
        fruitX = rand() % width;
        fruitY = rand() % height;
        htail++;
    }
    


   
        
}

int main() {
    Setup();
    while (!gameOver)
    {
        Draw();
        Input();
        Logic();
    }
    
    return 0;
}
